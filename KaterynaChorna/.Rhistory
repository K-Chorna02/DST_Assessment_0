library(ggplot2)
# read sheet 3 of the Excel file
getwd()
data <- read_excel("../data/who_air_quality_2024.xlsx", sheet = 3)
dim(data)       # rows and columns
str(data)       # structure: column names and types
names(data)     # column names
# read sheet 3 of the Excel file
getwd()
data <- read_excel("../data/who_air_quality_2024.xlsx", sheet = 3)
dim(data)       # rows and columns
str(data)       # structure: column names and types
names(data)     # column names
# Identify columns that are character
char_cols <- sapply(data, is.character)
char_cols
# read sheet 3 of the Excel file
# Identify columns that are character
char_cols <- sapply(data, is.character)
char_cols
# read sheet 3 of the Excel file
getwd()
data <- read_excel("../data/who_air_quality_2024.xlsx", sheet = 3)
dim(data)       # rows and columns
str(data)       # structure: column names and types
names(data)     # column names
mean(data$pm25_concentration)
# --- 0. Install and load required libraries ---
if(!require("gplots")) install.packages("gplots")
if(!require("readr")) install.packages("readr")
if(!require("readxl")) install.packages("readxl")
if(!require("dplyr")) install.packages("dplyr")
if(!require("ggplot2")) install.packages("ggplot2")
library(gplots)
library(readr)
library(readxl)
library(dplyr)
library(ggplot2)
# --- 1. Read data ---
data <- read_excel("data/who_air_quality_2024.xlsx", sheet = 3)
# --- 2. Replace literal "NA" strings with proper R NA ---
data[data == "NA"] <- NA
# --- 3. Convert numeric-like columns stored as character to numeric ---
num_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov","population")
data[num_cols] <- lapply(data[num_cols], as.numeric)
# --- 4. Quick overview ---
dim(data)           # rows and columns
str(data)           # structure and types
summary(data)       # summary statistics
colSums(is.na(data)) # missing values per column
#Replace literal "NA" strings with proper R NA ---
data[data == "NA"] <- NA
#convert numeric-like columns stored as character to numeric ---
num_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov","population")
data[num_cols] <- lapply(data[num_cols], as.numeric)
cor(data[, c("pm25_concentration","pm10_concentration","no2_concentration")], use="complete.obs")
# Base R scatterplot matrix
pairs(data[, c("pm25_concentration","pm10_concentration","no2_concentration")],
main="Pollutant Correlations")
#Replace literal "NA" strings with proper R NA ---
data[data == "NA"] <- NA
#convert numeric-like columns stored as character to numeric ---
num_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov","population")
data[num_cols] <- lapply(data[num_cols], as.numeric)
corr_matrix <- cor(data[, c("pm25_concentration","pm10_concentration","no2_concentration")],
use="complete.obs")
#Replace literal "NA" strings with proper R NA ---
data[data == "NA"] <- NA
#convert numeric-like columns stored as character to numeric ---
num_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov","population")
data[num_cols] <- lapply(data[num_cols], as.numeric)
corr_matrix <- cor(data[, c("pm25_concentration","pm10_concentration","no2_concentration")],
use="complete.obs")
#Replace literal "NA" strings with proper R NA ---
data[data == "NA"] <- NA
#convert numeric-like columns stored as character to numeric ---
num_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov","population")
data[num_cols] <- lapply(data[num_cols], as.numeric)
corr_matrix <- cor(data[, c("pm25_concentration","pm10_concentration","no2_concentration")],
use="complete.obs")
corr_matrix
heatmap.2(corr_matrix,
dendrogram="none",
trace="none",
col=bluered(100),
main="Correlation Heatmap of Pollutants",
margins=c(6,6),
key=TRUE)
hist(data$pm25_concentration, breaks=30, main="PM2.5 Distribution", xlab="µg/m³")
hist(data$pm10_concentration, breaks=30, main="PM10 Distribution", xlab="µg/m³")
hist(data$no2_concentration, breaks=30, main="NO2 Distribution", xlab="µg/m³")
hist(data$pm25_concentration, breaks=30, main="PM2.5 Distribution", xlab="µg/m³")
hist(data$pm10_concentration, breaks=30, main="PM10 Distribution", xlab="µg/m³")
hist(data$no2_concentration, breaks=30, main="NO2 Distribution", xlab="µg/m³")
boxplot(pm25_concentration ~ who_region, data=data, main="PM2.5 by Region", ylab="µg/m³")
# read sheet 3 of the Excel file
getwd()
data <- read_excel("../data/who_air_quality_2024.xlsx", sheet = 3)
#Replace literal "NA" strings with proper R NA ---
data[data == "NA"] <- NA
#convert numeric-like columns stored as character to numeric ---
num_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov","population")
data[num_cols] <- lapply(data[num_cols], as.numeric)
corr_matrix <- cor(data[, c("pm25_concentration","pm10_concentration","no2_concentration")],
use="complete.obs")
corr_matrix
# Base R scatterplot matrix
pairs(data[, c("pm25_concentration","pm10_concentration","no2_concentration")],
main="Pollutant Correlations")
hist(data$pm25_concentration, breaks=30, main="PM2.5 Distribution", xlab="µg/m³")
hist(data$pm10_concentration, breaks=30, main="PM10 Distribution", xlab="µg/m³")
hist(data$no2_concentration, breaks=30, main="NO2 Distribution", xlab="µg/m³")
boxplot(pm25_concentration ~ who_region, data=data, main="PM2.5 by Region", ylab="µg/m³")
hist(log1p(data$pm25_concentration), breaks=30, main="Log PM2.5 Distribution", xlab="log(1 + PM2.5)")
hist(data$pm25_concentration, breaks=30, main="PM2.5 Distribution", xlab="µg/m³")
hist(data$pm10_concentration, breaks=30, main="PM10 Distribution", xlab="µg/m³")
hist(data$no2_concentration, breaks=30, main="NO2 Distribution", xlab="µg/m³")
boxplot(pm25_concentration ~ who_region, data=data, main="PM2.5 by Region", ylab="µg/m³")
hist(log1p(data$pm25_concentration), breaks=30, main="Log PM2.5 Distribution", xlab="log(1 + PM2.5)")
hist(log1p(data$pm25_concentration), breaks=30,
main="PM2.5 Distribution (log scale)", xlab="PM2.5 (µg/m³, log-transformed)")
boxplot(pm25_concentration ~ who_region, data=data, main="PM2.5 by Region", ylab="µg/m³")
hist(log1p(data$pm25_concentration), breaks=30, main="Log PM2.5 Distribution", xlab="log(1 + PM2.5)")
hist(log1p(data$pm25_concentration), breaks=30,
main="PM2.5 Distribution (log scale)", xlab="PM2.5 (µg/m³, log-transformed)")
boxplot(pm25_concentration ~ who_region, data=data, main="PM2.5 by Region", ylab="µg/m³")
hist(log1p(data$pm25_concentration), breaks=30, main="Log PM2.5 Distribution", xlab="log(1 + PM2.5)")
)
boxplot(pm25_concentration ~ who_region, data=data, main="PM2.5 by Region", ylab="µg/m³")
hist(log1p(data$pm25_concentration), breaks=30, main="Log PM2.5 Distribution", xlab="log(1 + PM2.5)")
boxplot(pm25_concentration ~ who_region, data=data, main="PM2.5 by Region", ylab="µg/m³")
hist(log1p(data$pm25_concentration), breaks=30, main="Log PM2.5 Distribution", xlab="log(1 + PM2.5)")
boxplot(data$pm25_concentration, main="PM2.5 Distribution", ylab="µg/m³")
boxplot(pm25_concentration ~ who_region, data=data, main="PM2.5 by Region", ylab="µg/m³")
hist(log1p(data$pm25_concentration), breaks=30, main="Log PM2.5 Distribution", xlab="log(1 + PM2.5)")
boxplot(data$pm25_concentration, main="PM2.5 Distribution", ylab="µg/m³")
boxplot(log1p(data$pm25_concentration), main="PM2.5 Distribution (log scale)", ylab="log(1 + PM2.5)")
boxplot(pm25_concentration ~ who_region, data=data, main="PM2.5 by Region", ylab="µg/m³")
hist(log1p(data$pm25_concentration), breaks=30, main="Log PM2.5 Distribution", xlab="log(1 + PM2.5)")
boxplot(data$pm25_concentration, main="PM2.5 Distribution", ylab="µg/m³")
boxplot(log1p(data$pm25_concentration), main="PM2.5 Distribution (log scale)", ylab="log(1 + PM2.5)")
boxplot(data$pm25_concentration[data$pm25_concentration < quantile(data$pm25_concentration, 0.95)],
main="PM2.5 Distribution (95th percentile)", ylab="µg/m³")
boxplot(pm25_concentration ~ who_region, data=data, main="PM2.5 by Region", ylab="µg/m³")
hist(log1p(data$pm25_concentration), breaks=30, main="Log PM2.5 Distribution", xlab="log(1 + PM2.5)")
boxplot(data$pm25_concentration, main="PM2.5 Distribution", ylab="µg/m³")
boxplot(log1p(data$pm25_concentration), main="PM2.5 Distribution (log scale)", ylab="log(1 + PM2.5)")
q95 <- quantile(data$pm25_concentration, 0.95, na.rm = TRUE)
boxplot(data$pm25_concentration[data$pm25_concentration < q95],
main="PM2.5 Distribution (95th percentile)", ylab="µg/m³")
boxplot(pm25_concentration ~ who_region, data=data, main="PM2.5 by Region", ylab="µg/m³")
hist(log1p(data$pm25_concentration), breaks=30, main="Log PM2.5 Distribution", xlab="log(1 + PM2.5)")
boxplot(data$pm25_concentration, main="PM2.5 Distribution", ylab="µg/m³")
boxplot(log1p(data$pm25_concentration), main="PM2.5 Distribution (log scale)", ylab="log(1 + PM2.5)")
q90 <- quantile(data$pm25_concentration, 0.90, na.rm = TRUE)
boxplot(data$pm25_concentration[data$pm25_concentration < q90],
main="PM2.5 Distribution (95th percentile)", ylab="µg/m³")
boxplot(pm25_concentration ~ who_region, data=data, main="PM2.5 by Region", ylab="µg/m³")
hist(log1p(data$pm25_concentration), breaks=30, main="Log PM2.5 Distribution", xlab="log(1 + PM2.5)")
boxplot(data$pm25_concentration, main="PM2.5 Distribution", ylab="µg/m³")
boxplot(log1p(data$pm25_concentration), main="PM2.5 Distribution (log scale)", ylab="log(1 + PM2.5)")
q85 <- quantile(data$pm25_concentration, 0.85, na.rm = TRUE)
boxplot(data$pm25_concentration[data$pm25_concentration < q85],
main="PM2.5 Distribution (85th percentile)", ylab="µg/m³")
summary(data$pm25_tempcov)
hist(data$pm25_tempcov, main="PM2.5 Temporal Coverage", xlab="Percent of year")
# PM2.5 coverage
summary(data$pm25_tempcov)
hist(data$pm25_tempcov, breaks=20, main="PM2.5 Temporal Coverage (%)", xlab="Percent of Year", col="lightblue")
# PM10 coverage
summary(data$pm10_tempcov)
hist(data$pm10_tempcov, breaks=20, main="PM10 Temporal Coverage (%)", xlab="Percent of Year", col="lightgreen")
# NO2 coverage
summary(data$no2_tempcov)
hist(data$no2_tempcov, breaks=20, main="NO2 Temporal Coverage (%)", xlab="Percent of Year", col="lightcoral")
# Filter cities with at least 75% coverage
data_highcov <- subset(data,
pm25_tempcov >= 75 &
pm10_tempcov >= 75 &
no2_tempcov >= 75)
# Summary stats
summary(data[, c("pm25_tempcov","pm10_tempcov","no2_tempcov")])
# Filter cities with at least 75% coverage
data_highcov <- subset(data,
pm25_tempcov >= 75 &
pm10_tempcov >= 75 &
no2_tempcov >= 75)
# Summary stats
summary(data[, c("pm25_tempcov","pm10_tempcov","no2_tempcov")])
# Filter cities with at least 75% coverage
data_highcov <- subset(data,
pm25_tempcov >= 75 &
pm10_tempcov >= 75 &
no2_tempcov >= 75)
nrow(data_highcov)  # number of cities remaining
# Summary stats
summary(data[, c("pm25_tempcov","pm10_tempcov","no2_tempcov")], na.rm = TRUE)
# Filter cities with at least 75% coverage
data_highcov <- subset(data,
pm25_tempcov >= 75 &
pm10_tempcov >= 75 &
no2_tempcov >= 75)
nrow(data_highcov)  # number of cities remaining
# Summary stats
sapply(data[, c("pm25_tempcov","pm10_tempcov","no2_tempcov")], function(x) summary(x, na.rm = TRUE))
# Filter cities with at least 75% coverage
data_highcov <- subset(data,
pm25_tempcov >= 75 &
pm10_tempcov >= 75 &
no2_tempcov >= 75)
nrow(data_highcov)  # number of cities remaining
# Summary stats
summary(data[, c("pm25_tempcov","pm10_tempcov","no2_tempcov")], na.rm = TRUE)
# Filter cities with at least 75% coverage
data_highcov <- subset(data,
pm25_tempcov >= 75 &
pm10_tempcov >= 75 &
no2_tempcov >= 75)
nrow(data_highcov)  # number of cities remaining
# Summary stats
summary(data[, c("pm25_tempcov","pm10_tempcov","no2_tempcov")], na.rm = TRUE)
# Filter cities with at least 75% coverage
data_highcov <- subset(data,
pm25_tempcov >= 75 &
pm10_tempcov >= 75 &
no2_tempcov >= 75)
nrow(data_highcov)  # number of cities remaining
# Scatterplot matrix for high-coverage cities
pairs(data_highcov[, c("pm25_concentration","pm10_concentration","no2_concentration")],
main="Pollutant Correlations (High-Coverage Cities)")
# Summary stats
summary(data[, c("pm25_tempcov","pm10_tempcov","no2_tempcov")], na.rm = TRUE)
# Filter cities with at least 75% coverage
data_highcov <- subset(data,
pm25_tempcov >= 75 &
pm10_tempcov >= 75 &
no2_tempcov >= 75)
nrow(data_highcov)  # number of cities remaining
# Correlation matrix for high-coverage cities
corr_matrix_highcov <- cor(data_highcov[, c("pm25_concentration",
"pm10_concentration",
"no2_concentration")],
use = "complete.obs")
corr_matrix_highcov
# Scatterplot matrix for high-coverage cities
pairs(data_highcov[, c("pm25_concentration","pm10_concentration","no2_concentration")],
main="Pollutant Correlations (High-Coverage Cities)")
#Replace literal "NA" strings with proper R NA ---
data[data == "NA"] <- NA
# --- 0. Install and load libraries ---
if(!require("gplots")) install.packages("gplots")
if(!require("readr")) install.packages("readr")
if(!require("readxl")) install.packages("readxl")
if(!require("dplyr")) install.packages("dplyr")
if(!require("ggplot2")) install.packages("ggplot2")
library(gplots)
library(readr)
library(readxl)
library(dplyr)
library(ggplot2)
# read sheet 3 of the Excel file
getwd()
data <- read_excel("../data/who_air_quality_2024.xlsx", sheet = 3)
#Replace literal "NA" strings with proper R NA ---
data[data == "NA"] <- NA
#convert numeric-like columns stored as character to numeric ---
num_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov","population")
summary(data)
data[num_cols] <- lapply(data[num_cols], as.numeric)
corr_matrix <- cor(data[, c("pm25_concentration","pm10_concentration","no2_concentration")],
use="complete.obs")
corr_matrix
#Replace literal "NA" strings with proper R NA ---
data[data == "NA"] <- NA
#convert numeric-like columns stored as character to numeric ---
num_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov","population")
data[num_cols] <- lapply(data[num_cols], as.numeric) # set the data as numeric
summary(data)
#Replace literal "NA" strings with proper R NA ---
data[data == "NA"] <- NA
#convert numeric-like columns stored as character to numeric ---
num_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov","population")
data[num_cols] <- lapply(data[num_cols], as.numeric) # set the data as numeric
summary(data)
corr_matrix <- cor(data[, c("pm25_concentration","pm10_concentration","no2_concentration")],
use="complete.obs")
corr_matrix
# --- 0. Install and load libraries ---
if(!require("gplots")) install.packages("gplots")
if(!require("readr")) install.packages("readr")
if(!require("readxl")) install.packages("readxl")
if(!require("dplyr")) install.packages("dplyr")
if(!require("ggplot2")) install.packages("ggplot2")
if(!require("kableExtra")) install.packages("kableExtra")
library(gplots)
library(readr)
library(readxl)
library(dplyr)
library(ggplot2)
library(kableExtra)
# read sheet 3 of the Excel file
getwd()
data <- read_excel("../data/who_air_quality_2024.xlsx", sheet = 3)
#Replace literal "NA" strings with proper R NA ---
data[data == "NA"] <- NA
#convert numeric-like columns stored as character to numeric ---
num_cols <- c("pm10_concentration","pm25_concentration","no2_concentration",
"pm10_tempcov","pm25_tempcov","no2_tempcov","population")
data[num_cols] <- lapply(data[num_cols], as.numeric) # set the data as numeric
summary(data)
corr_matrix <- cor(data[, c("pm25_concentration","pm10_concentration","no2_concentration")],
use="complete.obs")
corr_matrix
pairs(data[, c("pm25_concentration","pm10_concentration","no2_concentration")],
main="Pollutant Correlations")
# Summary stats
summary(data[, c("pm25_tempcov","pm10_tempcov","no2_tempcov")], na.rm = TRUE)
# Filter cities with at least 75% coverage
data_highcov <- subset(data,
pm25_tempcov >= 75 &
pm10_tempcov >= 75 &
no2_tempcov >= 75)
nrow(data_highcov)  # number of cities remaining
# Correlation matrix for high-coverage cities
corr_matrix_highcov <- cor(data_highcov[, c("pm25_concentration",
"pm10_concentration",
"no2_concentration")],
use = "complete.obs")
corr_matrix_highcov
# Scatterplot matrix for high-coverage cities
pairs(data_highcov[, c("pm25_concentration","pm10_concentration","no2_concentration")],
main="Pollutant Correlations (High-Coverage Cities)")
trend_data <- data %>%
group_by(year) %>%
summarise(mean_pm25 = mean(pm25_concentration, na.rm = TRUE),
mean_pm10 = mean(pm10_concentration, na.rm = TRUE),
mean_no2  = mean(no2_concentration, na.rm = TRUE))
ggplot(trend_data, aes(x = as.integer(year))) +
geom_line(aes(y = mean_pm10, colour = "PM10"), size = 1) +
geom_line(aes(y = mean_no2,  colour = "NO2"), size = 1) +
geom_line(aes(y = mean_pm25, colour = "PM2.5"), size = 1) +
scale_colour_manual(values = c("PM10" = "blue",
"NO2"  = "green",
"PM2.5" = "red")) +
scale_x_continuous(breaks = unique(trend_data_complete$year)) +
labs(title = "Global Trends in Air Pollutant Levels Over Time",
y = "Average Concentration (µg/m³)", x = "Year",
colour = "Pollutant") +
theme_minimal()
ggplot(data, aes(x = as.integer(year))) +
geom_line(aes(y = mean_pm10, colour = "PM10"), size = 1) +
geom_line(aes(y = mean_no2,  colour = "NO2"), size = 1) +
geom_line(aes(y = mean_pm25, colour = "PM2.5"), size = 1) +
scale_colour_manual(values = c("PM10" = "blue",
"NO2"  = "green",
"PM2.5" = "red")) +
scale_x_continuous(breaks = unique(trend_data_complete$year)) +
labs(title = "Global Trends in Air Pollutant Levels Over Time",
y = "Average Concentration (µg/m³)", x = "Year",
colour = "Pollutant") +
theme_minimal()
trend_data <- data %>%
group_by(year) %>%
summarise(mean_pm25 = mean(pm25_concentration, na.rm = TRUE),
mean_pm10 = mean(pm10_concentration, na.rm = TRUE),
mean_no2  = mean(no2_concentration, na.rm = TRUE))
ggplot(trend_data, aes(x = as.integer(year))) +
geom_line(aes(y = mean_pm10, colour = "PM10"), size = 1) +
geom_line(aes(y = mean_no2,  colour = "NO2"), size = 1) +
geom_line(aes(y = mean_pm25, colour = "PM2.5"), size = 1) +
scale_colour_manual(values = c("PM10" = "blue",
"NO2"  = "green",
"PM2.5" = "red")) +
scale_x_continuous(breaks = unique(trend_data$year)) +
labs(title = "Global Trends in Air Pollutant Levels Over Time",
y = "Average Concentration (µg/m³)", x = "Year",
colour = "Pollutant") +
theme_minimal()
# Trends Over Time (Complete Data )
trend_data_complete <- data_complete %>%
group_by(year) %>%
summarise(mean_pm25 = mean(pm25_concentration, na.rm = TRUE),
mean_pm10 = mean(pm10_concentration, na.rm = TRUE),
mean_no2  = mean(no2_concentration, na.rm = TRUE))
trend_data <- data %>%
group_by(year) %>%
summarise(mean_pm25 = mean(pm25_concentration, na.rm = TRUE),
mean_pm10 = mean(pm10_concentration, na.rm = TRUE),
mean_no2  = mean(no2_concentration, na.rm = TRUE))
ggplot(trend_data, aes(x = as.integer(year))) +
geom_line(aes(y = mean_pm10, colour = "PM10"), size = 1) +
geom_line(aes(y = mean_no2,  colour = "NO2"), size = 1) +
geom_line(aes(y = mean_pm25, colour = "PM2.5"), size = 1) +
scale_colour_manual(values = c("PM10" = "blue",
"NO2"  = "green",
"PM2.5" = "red")) +
scale_x_continuous(breaks = unique(trend_data_complete$year)) +
labs(title = "Global Trends in Air Pollutant Levels Over Time",
y = "Average Concentration (µg/m³)", x = "Year",
colour = "Pollutant") +
theme_minimal()
trend_data <- data %>%
group_by(year) %>%
summarise(mean_pm25 = mean(pm25_concentration, na.rm = TRUE),
mean_pm10 = mean(pm10_concentration, na.rm = TRUE),
mean_no2  = mean(no2_concentration, na.rm = TRUE))
ggplot(trend_data, aes(x = as.integer(year))) +
geom_line(aes(y = mean_pm10, colour = "PM10"), size = 1) +
geom_line(aes(y = mean_no2,  colour = "NO2"), size = 1) +
geom_line(aes(y = mean_pm25, colour = "PM2.5"), size = 1) +
scale_colour_manual(values = c("PM10" = "blue",
"NO2"  = "green",
"PM2.5" = "red")) +
scale_x_continuous(breaks = unique(trend_data$year)) +
labs(title = "Global Trends in Air Pollutant Levels Over Time",
y = "Average Concentration (µg/m³)", x = "Year",
colour = "Pollutant") +
theme_minimal()
# Trends Over Time (Complete Data )
trend_data_complete <- data_complete %>%
group_by(year) %>%
summarise(mean_pm25 = mean(pm25_concentration, na.rm = TRUE),
mean_pm10 = mean(pm10_concentration, na.rm = TRUE),
mean_no2  = mean(no2_concentration, na.rm = TRUE))
# Trends Over Time (Complete Data )
# Complete data (all three pollutants recorded)
data_complete <- data[complete.cases(data[, c("pm25_concentration","pm10_concentration","no2_concentration")]), ]
trend_data_complete <- data_complete %>%
group_by(year) %>%
summarise(mean_pm25 = mean(pm25_concentration, na.rm = TRUE),
mean_pm10 = mean(pm10_concentration, na.rm = TRUE),
mean_no2  = mean(no2_concentration, na.rm = TRUE))
ggplot(trend_data_complete, aes(x = as.integer(year))) +
geom_line(aes(y = mean_pm10, colour = "PM10"), size = 1) +
geom_line(aes(y = mean_no2,  colour = "NO2"), size = 1) +
geom_line(aes(y = mean_pm25, colour = "PM2.5"), size = 1) +
scale_colour_manual(values = c("PM10" = "blue",
"NO2"  = "green",
"PM2.5" = "red")) +
scale_x_continuous(breaks = unique(trend_data_complete$year)) +
labs(title = "Global Trends in Air Pollutant Levels Over Time (Complete Data)",
y = "Average Concentration (µg/m³)", x = "Year",
colour = "Pollutant") +
theme_minimal()
# Total rows
n_all <- nrow(data)
n_all
# Complete data (all three pollutants recorded)
data_complete <- data[complete.cases(data[, c("pm25_concentration","pm10_concentration","no2_concentration")]), ]
n_complete <- nrow(data_complete)
n_complete
# Complete data + high coverage (≥75% for all pollutants)
data_highcov_complete <- data_complete %>%
filter(!is.na(pm25_tempcov), !is.na(pm10_tempcov), !is.na(no2_tempcov),
pm25_tempcov >= 75, pm10_tempcov >= 75, no2_tempcov >= 75)
n_highcov_complete <- nrow(data_highcov_complete)
n_highcov_complete
trend_highcov_complete <- data_highcov_complete %>%
group_by(year) %>%
summarise(mean_pm25 = mean(pm25_concentration, na.rm = TRUE),
mean_pm10 = mean(pm10_concentration, na.rm = TRUE),
mean_no2  = mean(no2_concentration, na.rm = TRUE))
ggplot(trend_highcov_complete, aes(x = as.integer(year))) +
geom_line(aes(y = mean_pm25, colour = "PM2.5"), size = 1) +
geom_line(aes(y = mean_pm10, colour = "PM10"), size = 1) +
geom_line(aes(y = mean_no2,  colour = "NO2"), size = 1) +
scale_colour_manual(values = c("PM2.5" = "red",
"PM10"  = "blue",
"NO2"   = "green")) +
scale_x_continuous(breaks = unique(trend_highcov_complete$year)) +
labs(title = "Global Trends in Air Pollutant Levels Over Time\n(Complete + High Coverage Data)",
y = "Average Concentration (µg/m³)", x = "Year",
colour = "Pollutant") +
theme_minimal()
summary_table <- data_highcov_complete %>%
group_by(year) %>%
summarise(n = n(),
mean_pm25 = mean(pm25_concentration, na.rm = TRUE),
mean_pm10 = mean(pm10_concentration, na.rm = TRUE),
mean_no2  = mean(no2_concentration, na.rm = TRUE)) %>%
arrange(year)
kable(summary_table,
digits = 2,
col.names = c("Year", "Observations", "PM2.5 (µg/m³)", "PM10 (µg/m³)", "NO2 (µg/m³)"),
caption = "") %>%
kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed"))
# Classify each city by coverage
data <- data %>%
mutate(coverage_category = case_when(
is.na(pm25_tempcov) & is.na(pm10_tempcov) & is.na(no2_tempcov) ~ "NA",
pm25_tempcov >= 75 & pm10_tempcov >= 75 & no2_tempcov >= 75 ~ "High",
TRUE ~ "Low"
))
# Summarise by region
coverage_by_region <- data %>%
group_by(who_region, coverage_category) %>%
summarise(n_cities = n_distinct(city), .groups = "drop")
# Plot stacked bar chart
ggplot(coverage_by_region, aes(x = who_region, y = n_cities, fill = coverage_category)) +
geom_bar(stat = "identity") +
labs(title = "Air Quality Data Coverage by Region",
x = "Region", y = "Number of Cities", fill = "Coverage") +
theme_minimal()
